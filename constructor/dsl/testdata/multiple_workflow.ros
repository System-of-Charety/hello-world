request_funds(1){ 
  find_account{
    currency = {"symbol":"ETH", "decimals":18};
    currency_2 = set_variable({"symbol":"ETH", "decimals":18}); // support both native and function
    random_account = find_balance({
      "minimum_balance":{
        "value": "0",
        "currency": {{currency}}
      }, 
      "create_limit":1
    });
  },
  request{
    // Show different ways to do math
    math_1 = math({
      "operation": "subtraction",
      "left_value": "0", 
      "right_value": "100" 
    });
    math_2 = 10 + {{math_1}};
    math_3 = {{math_2}} - "20";
    math_4 = {{math_3}} * "5";
    math_5 = {{math_4}} / "5";
    loaded_account = find_balance({
      "account_identifier": {{random_account.account_identifier}},
      "minimum_balance":{
        "value": "10000000000000000",
        "currency": {{currency}}
      }
    });
  }
}

create_account(1){
  create_account{
    network = {"network":"Ropsten", "blockchain":"Ethereum"};
    key = generate_key({"curve_type": "secp256k1"});
    account = derive({
      "network_identifier": {{network}},
      "public_key": {{key.public_key}}
    });
    save_account({
      "account_identifier": {{account.account_identifier}},
      "keypair": {{key}}
    });
  }
}
